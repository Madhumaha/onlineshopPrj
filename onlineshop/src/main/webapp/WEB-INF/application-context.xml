<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:security="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<!-- http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd -->
<!-- http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"  xmlns:webflow-config="http://www.springframework.org/schema/webflow-config"> -->
    
    <context:component-scan base-package="Model" />
    <!-- Data Source Declaration -->
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <beans:property name="driverClassName" value="org.h2.Driver" />
        <beans:property name="url"
            value="jdbc:h2:tcp://localhost/~/test" />
        <beans:property name="username" value="sa" />
        <beans:property name="password" value="" />
    </beans:bean>

    <!-- Session Factory Declaration -->
    
    <beans:bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />               
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                
                <beans:prop key="format_sql">true</beans:prop>
    <beans:prop key="use_sql_comments">true</beans:prop>
    
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>               
            </beans:props>
        </beans:property>        

	<!-- Package Name for Model Class -->
       <beans:property name="packagesToScan">
           <beans:list><beans:value>Model</beans:value></beans:list>       
        </beans:property> 
    </beans:bean>
   
    <!-- <beans:bean
class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->
  
  <!--  Spring Security -->
	<security:http auto-config="true"> 
       <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
        <security:intercept-url pattern="/user/**" access="ROLE_USER" />
       <security:intercept-url pattern="/success/**" access="ROLE_USER,ROLE_ADMIN" />
       <security:form-login
           login-page="/login"
           default-target-url="/"
           authentication-failure-url="/login?error"
           username-parameter="username"
           password-parameter="password" />
       <security:logout logout-success-url="/login?logout" />
   </security:http>
 
	<security:authentication-manager>
       <security:authentication-provider>
       <!-- <security:user-service>
			<security:user name="mkyong" password="123456" authorities="ROLE_ADMIN" /> 
			
		  </security:user-service> -->
           <security:jdbc-user-service data-source-ref="dataSource"
                                       authorities-by-username-query="SELECT cusname,role From user WHERE cusname = ?"
                                       users-by-username-query="SELECT cusname, cuspwd, cusphone FROM user WHERE cusname = ?" />
                                      
          <!--  <security:jdbc-user-service data-source-ref="dataSource" authorities-by-username-query="SELECT username, role From userrole WHERE username = ?" users-by-username-query="SELECT username, password FROM user1 WHERE username = ?" /> -->
                                        
       </security:authentication-provider>
   </security:authentication-manager>
   
   <!-- <webflow-config:flow-executor id="flowExecutor" flow-registry="flowRegistry" />

    <webflow-config:flow-registry id="flowRegistry" base-path="/WEB-INF/views">
        <webflow-config:flow-location path="/userCheckoutFlow.xml" id="checkout" />
    </webflow-config:flow-registry>

    <bean id="flowHandlerMapping" class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
        <property name="flowRegistry" ref="flowRegistry" />
    </bean>

    <bean id="flowHandlerAdapter" class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
        <property name="flowExecutor" ref="flowExecutor" />
    </bean> -->
   
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>